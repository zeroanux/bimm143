{
  "hash": "6d32f2e0ac6982ed7777c2ac90508467",
  "result": {
    "markdown": "---\ntitle: \"homework06\"\nauthor: \"Xueran Zou\"\ndate: 2023-04-23\nformat: pdf\neditor: visual\n---\n\n\n## A. Improve the analysis code below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(a=1:10, b=seq(200,400,length=10),c=11:20,d=NA) \ndf$a <- (df$a - min(df$a)) / (max(df$a) - min(df$a))\ndf$b <- (df$b - min(df$a)) / (max(df$b) - min(df$b))\ndf$c <- (df$c - min(df$c)) / (max(df$c) - min(df$c))\ndf$d <- (df$d - min(df$d)) / (max(df$a) - min(df$d)) \n```\n:::\n\n\nWrite the function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfunction_1 = function(x){\n  (x - min(x)) / (max(x) - min(x))\n}\n```\n:::\n\n\nApply the function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfunction_1(df$a)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 0.0000000 0.1111111 0.2222222 0.3333333 0.4444444 0.5555556 0.6666667\n [8] 0.7777778 0.8888889 1.0000000\n```\n:::\n:::\n\n\n## B. Improve the below example code for the analysis of protein drug interactions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(bio3d)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ns1 <- read.pdb(\"4AKE\") # kinase with drug\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Note: Accessing on-line PDB file\n```\n:::\n\n```{.r .cell-code}\ns2 <- read.pdb(\"1AKE\") # kinase no drug\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Note: Accessing on-line PDB file\n   PDB has ALT records, taking A only, rm.alt=TRUE\n```\n:::\n\n```{.r .cell-code}\ns3 <- read.pdb(\"1E4Y\") # kinase with drug\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Note: Accessing on-line PDB file\n```\n:::\n\n```{.r .cell-code}\ns1.chainA <- trim.pdb(s1, chain=\"A\", elety=\"CA\")\ns2.chainA <- trim.pdb(s2, chain=\"A\", elety=\"CA\")\ns3.chainA <- trim.pdb(s1, chain=\"A\", elety=\"CA\")\ns1.b <- s1.chainA$atom$b\ns2.b <- s2.chainA$atom$b\ns3.b <- s3.chainA$atom$b\nplotb3(s1.b, sse=s1.chainA, typ=\"l\", ylab=\"Bfactor\") \n```\n\n::: {.cell-output-display}\n![](homework06_files/figure-pdf/unnamed-chunk-5-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\nplotb3(s2.b, sse=s2.chainA, typ=\"l\", ylab=\"Bfactor\") \n```\n\n::: {.cell-output-display}\n![](homework06_files/figure-pdf/unnamed-chunk-5-2.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\nplotb3(s3.b, sse=s3.chainA, typ=\"l\", ylab=\"Bfactor\")\n```\n\n::: {.cell-output-display}\n![](homework06_files/figure-pdf/unnamed-chunk-5-3.pdf){fig-pos='H'}\n:::\n:::\n\n\nWrite the function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfunction_2 <- function(x){\n  #input: PDB\n  s <- read.pdb(x)\n  s.chainA <- trim.pdb(s, chain=\"A\", elety=\"CA\")\n  s.b <- s.chainA$atom$b\n  plotb3(s.b, sse=s.chainA, typ=\"l\", ylab=\"Bfactor\")\n  #output: a standard scatter plot with optional secondary structure in the marginal regions\n}\n```\n:::\n\n\nApply function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfunction_2(\"4AKE\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Note: Accessing on-line PDB file\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in get.pdb(file, path = tempdir(), verbose = FALSE):\nC:\\Users\\Lenovo\\AppData\\Local\\Temp\\RtmpYnJmt3/4AKE.pdb exists. Skipping\ndownload\n```\n:::\n\n::: {.cell-output-display}\n![](homework06_files/figure-pdf/unnamed-chunk-7-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n**Q1. What type of object is returned from the read.pdb() function?**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(s1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"pdb\" \"sse\"\n```\n:::\n:::\n\n\nThe type of object returned from the read.pdb() function is large pdb.\n\n**Q2. What does the trim.pdb() function do?**\n\nThe function is used to produce a new smaller PDB object, containing a subset of atoms, from a given larger PDB object.\n\n**Q3. What input parameter would turn off the marginal black and grey rectangles in the plots and what do they represent in this case?**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ns1 <- read.pdb(\"4AKE\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Note: Accessing on-line PDB file\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in get.pdb(file, path = tempdir(), verbose = FALSE):\nC:\\Users\\Lenovo\\AppData\\Local\\Temp\\RtmpYnJmt3/4AKE.pdb exists. Skipping\ndownload\n```\n:::\n\n```{.r .cell-code}\ns1.chainA <- trim.pdb(s1, chain=\"A\", elety=\"CA\")\nfunction_2(\"4AKE\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Note: Accessing on-line PDB file\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in get.pdb(file, path = tempdir(), verbose = FALSE):\nC:\\Users\\Lenovo\\AppData\\Local\\Temp\\RtmpYnJmt3/4AKE.pdb exists. Skipping\ndownload\n```\n:::\n\n::: {.cell-output-display}\n![](homework06_files/figure-pdf/unnamed-chunk-9-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\nplotb3(s1.b, sse=s1.chainA, typ=\"l\", ylab=\"Bfactor\", top=FALSE, bot=FALSE)\n```\n\n::: {.cell-output-display}\n![](homework06_files/figure-pdf/unnamed-chunk-9-2.pdf){fig-pos='H'}\n:::\n:::\n\n\nThe input parameter \"top=FALSE\" and \"bot=FALSE\" would turn off the marginal black and grep rectangles in the plot.\n\nIn this case, the black ones represent alpha helices, and the grey ones represent beta strands.\n\n**Q4. What would be a better plot to compare across the different proteins?**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhc <- hclust(dist(rbind(s1.b, s2.b, s3.b)))\nplot(hc)\n```\n\n::: {.cell-output-display}\n![](homework06_files/figure-pdf/unnamed-chunk-10-1.pdf){fig-pos='H'}\n:::\n:::\n\n\nThe difference distance matrix can be a better plot to compare across the different proteins.\n\n**Q5. Which proteins are more similar to each other in their B-factor trends. How could you quantify this?**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhc <- hclust(dist(rbind(s1.b, s2.b, s3.b)))\nplot(hc)\n```\n\n::: {.cell-output-display}\n![](homework06_files/figure-pdf/unnamed-chunk-11-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n**Q6. How would you generalize the original code above to work with any set of input protein structures?**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfunction_2 <- function(x){\n  s <- read.pdb(x)\n  s.chainA <- trim.pdb(s, chain=\"A\", elety=\"CA\")\n  s.b <- s.chainA$atom$b\n  plotb3(s.b, sse=s.chainA, typ=\"l\", ylab=\"Bfactor\")\n}\n```\n:::\n",
    "supporting": [
      "homework06_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}